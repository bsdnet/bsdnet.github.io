<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on Learn, Practice, Summarize, Share</title>
    <link>https://bsdnet.github.io/categories/kubernetes/</link>
    <description>Recent content in Kubernetes on Learn, Practice, Summarize, Share</description>
    <image>
      <title>Learn, Practice, Summarize, Share</title>
      <url>https://bsdnet.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://bsdnet.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 May 2023 13:36:28 -0800</lastBuildDate>
    <atom:link href="https://bsdnet.github.io/categories/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetes Cluster Illustrated</title>
      <link>https://bsdnet.github.io/posts/kubernetes-cluster-architecture-illustrated/</link>
      <pubDate>Sat, 20 May 2023 13:36:28 -0800</pubDate>
      <guid>https://bsdnet.github.io/posts/kubernetes-cluster-architecture-illustrated/</guid>
      <description>&lt;h2 id=&#34;objective&#34;&gt;Objective&lt;/h2&gt;
&lt;p&gt;To illustrate kubernetes cluster architecture and understand critical Kubernetes components.&lt;/p&gt;
&lt;h2 id=&#34;cluster-architecture&#34;&gt;Cluster Architecture&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://bsdnet.github.io/images/kubernetes-cluster-architecture.png&#34; alt=&#34;Kubernetes Cluster Architecture&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;control-plane-components&#34;&gt;Control Plane Components&lt;/h2&gt;
&lt;p&gt;Control Plane components run on one or mulptile control plane nodes.&lt;/p&gt;
&lt;h3 id=&#34;kube-apiserver&#34;&gt;kube-apiserver&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/apiserver&#34;&gt;kube-apiserver&lt;/a&gt; implements the Kubernetes API, and is designed to scale horizontally.&lt;/p&gt;
&lt;p&gt;kube-apiserver runs as a &lt;a href=&#34;https://kubernetes.io/docs/tasks/configure-pod-container/static-pod/&#34;&gt;static pod&lt;/a&gt; or systemd daemon, configured using Pod specification or systemd unit and configuration file in /etc.&lt;/p&gt;
&lt;h3 id=&#34;etcd&#34;&gt;etcd&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://etcd.io/docs/&#34;&gt;etcd&lt;/a&gt; is a consistent and highly-available key value store used for storing Kubernetes&amp;rsquo; cluster data.&lt;/p&gt;</description>
    </item>
    <item>
      <title>vSphere CSI Driver Illustrated</title>
      <link>https://bsdnet.github.io/posts/vsphere-csi-driver-illustrated/</link>
      <pubDate>Sun, 25 Dec 2022 16:15:26 -0800</pubDate>
      <guid>https://bsdnet.github.io/posts/vsphere-csi-driver-illustrated/</guid>
      <description>&lt;h2 id=&#34;objective&#34;&gt;Objective&lt;/h2&gt;
&lt;p&gt;To understand how &lt;a href=&#34;https://docs.vmware.com/en/VMware-vSphere-Container-Storage-Plug-in/2.0/vmware-vsphere-csp-getting-started/GUID-74AF02D7-1562-48BD-A9FE-C81A53342AC3.html&#34;&gt;vSphere CSI driver&lt;/a&gt; works and is being deployed.&lt;/p&gt;
&lt;h2 id=&#34;vsphere-csi-driver-architecture&#34;&gt;vSphere CSI Driver Architecture&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://bsdnet.github.io/images/vsphere-csi-driver-architecture.png&#34; alt=&#34;vSphere CSI Driver Architecture&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;vsphere-csi-driver-deployment&#34;&gt;vSphere CSI Driver Deployment&lt;/h2&gt;
&lt;p&gt;vSphere CSI Driver is a Kubernetes &lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/deployment/&#34;&gt;Deployment&lt;/a&gt; that includes multiple containers and runs
on the control plane node.&lt;/p&gt;
&lt;h3 id=&#34;csi-snapshotter&#34;&gt;csi-snapshotter&lt;/h3&gt;
&lt;p&gt;csi-snapshotter is the sidecar container that watches for &lt;code&gt;VolumeSnapshotContent&lt;/code&gt;
create/update/delete events. csi-snapshotter works with CSI snapshot controller
together implement CSI snapshot function.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&#34;https://kubernetes-csi.github.io/docs/external-snapshotter.html##description&#34;&gt;Description&lt;/a&gt;
and &lt;a href=&#34;https://github.com/kubernetes-csi/external-snapshotter/tree/master/cmd/csi-snapshotter&#34;&gt;Github&lt;/a&gt; for further details.&lt;/p&gt;
&lt;h3 id=&#34;csi-resizer&#34;&gt;csi-resizer&lt;/h3&gt;
&lt;p&gt;csi-resizer is a sidecar container that watches the Kubernetes API server for &lt;code&gt;PersistentVolumeClaim&lt;/code&gt; updates
and triggers &lt;code&gt;ControllerExpandVolume&lt;/code&gt; operation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes Container Stack Illustrated</title>
      <link>https://bsdnet.github.io/posts/kubernetes-container-stack-illustrated/</link>
      <pubDate>Sat, 09 Apr 2022 18:51:57 -0700</pubDate>
      <guid>https://bsdnet.github.io/posts/kubernetes-container-stack-illustrated/</guid>
      <description>&lt;p&gt;In Kubernetes 1.24, &lt;a href=&#34;https://kubernetes.io/blog/2021/11/12/are-you-ready-for-dockershim-removal/&#34;&gt;dockershim&lt;/a&gt; will be removed. What does it mean, let&amp;rsquo;s take a look the container stackbefore and after dockershim removal.&lt;/p&gt;
&lt;h2 id=&#34;objective&#34;&gt;Objective&lt;/h2&gt;
&lt;p&gt;To walkthrough container stack on a Kubernetes node.&lt;/p&gt;
&lt;h2 id=&#34;before-124-release&#34;&gt;Before 1.24 release&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://bsdnet.github.io/images/kubernetes-container-stack-before-124.png&#34; alt=&#34;Kubernetes Container Stack Before 1.24&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;since-124-release&#34;&gt;Since 1.24 release&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://bsdnet.github.io/images/kubernetes-container-stack-124.png&#34; alt=&#34;Kubernetes Container Stack Since 1.24&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;walk-through&#34;&gt;Walk-through&lt;/h2&gt;
&lt;p&gt;Using the opportunity, we can walkthrough the container stack and corresponding tooling on a Kubernetes node from top to bottom.&lt;/p&gt;
&lt;h3 id=&#34;apiserver&#34;&gt;apiserver&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/&#34;&gt;apiserver&lt;/a&gt; sits on the Kubernetes master, validates and configures data for the api objects which include pods, services, replicationcontrollers and others. The API Server services REST operations and provides the cluster&amp;rsquo;s shared state.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
